source('D:/Documents/Dottorato/Analisi statistica/GitHub/resampleWGCNA/R/test_eigengene_explained_variance.R')
source('D:/Documents/Dottorato/Analisi statistica/GitHub/resampleWGCNA/R/test_RV_target_module.R')
library(devtools)
library(roxygen2)
setwd("D:/Documents/Dottorato/Analisi statistica/GitHub/resampleWGCNA")
devtools::document()
?test_eigengene_explained_variance
?test_RV_target_module
devtools::document()
?test_RV_target_module
setwd("D:/Documents/Dottorato/Morfometria geometrica/African Monkeys/01bis-Data_Import_prelimsNEW")
library(geomorph)
library(Morpho)
Shape=read.table("RiArticulatedShapes.txt",row.names=1,header=T,sep="\t",na.strings=c("NA","-9999"))
LMcorrespondence=read.table("LandmarkCorrespondence.txt",header=T,sep="\t",na.strings=c("NA","-9999"),stringsAsFactors=FALSE)
LMcorrespondence=apply(LMcorrespondence,2,tolower)
# Import data
# In the case of the landmark correspondence,
# transform the first column to lowercase
colnames(Shape)==LMcorrespondence[,"originalL"]
View(LMcorrespondence)
str(Shape)
LMcorrespondence[,"originalL"]
colnames(Shape)
all(colnames(Shape) %in% LMcorrespondence[,"originalL"])
LMcorrespondence[,"originalL"]
str(LMcorrespondence[,"originalL"])
colnames(Shape)
str(colnames(Shape))
str(LMcorrespondence[,"originalL"])
str(colnames(Shape))
landmarks_in_common=intersect(colnames(Shape), LMcorrespondence[,"originalL"])
landmarks_in_common
LMcorrespondence[,"Lin86Lguenons"]
rownames(LMcorrespondence)=LMcorrespondence[,"originalL"]
LMcorrespondence_incommon=LMcorrespondence[landmarks_in_common,]
LMcorrespondence_incommon
Shape2=Shape[,LMcorrespondence_incommon[,"originalL"]]
colnames(Shape2)=LMcorrespondence_incommon[,"Lin86Lguenons"]
is.na(Shape2)
rowSums(is.na(Shape2))!=ncol(Shape2)
str(Shape2)
is.na(Shape2)
rowSums(is.na(Shape2))
rowSums(is.na(Shape2))==ncol(Shape2)
all(rowSums(is.na(Shape2))==ncol(Shape2)==FALSE)
all((rowSums(is.na(Shape2))==ncol(Shape2))==FALSE)
rowSums(is.na(Shape2))==ncol(Shape2)
all(rowSums(is.na(Shape2))!=ncol(Shape2))
all(rowSums(is.na(Shape))!=ncol(Shape))
which(rowSums(is.na(Shape))==ncol(Shape))
Shape[which(rowSums(is.na(Shape))==ncol(Shape)),]
Shape[which(rowSums(is.na(Shape))!=ncol(Shape)),]
Shape[which(rowSums(is.na(Shape))==ncol(Shape)),]
Shape2[which(rowSums(is.na(Shape2))==ncol(Shape)),]
Shape2[which(rowSums(is.na(Shape2))==ncol(Shape2)),]
plotTangentSpace(procSym(vecx(na.omit(Shape2),revert=TRUE,lmdim=3,byrow=TRUE))$orpdata)
Otherinfo=read.table("OtherInfo.txt",row.names=1,header=T,sep="\t",na.strings=c("NA","-9999"))
?fixLMtps
is.na(Shape2)
rowSums(is.na(Shape2))
str(Shape2)
rownames(Shape2)
rownames(Shape)
rownames(Shape2)
rowSums(is.na(Shape2))
containing_missing_LM=rownames(Shape2)[which(rowSums(is.na(Shape2))>0)]
containing_missing_LM
Shape2LMfix=fixLMtps(vecx(Shape2,revert=TRUE,lmdim=3,byrow=TRUE), comp = 10, weight = TRUE, weightfun = NULL)
# Estimate missing landmarks based on tps
plotTangentSpace(procSym(Shape2LMfix$out)$orpdata)
vecx(Shape2,revert=TRUE,lmdim=3,byrow=TRUE)
plotTangentSpace(vecx(Shape2,revert=TRUE,lmdim=3,byrow=TRUE))
plotTangentSpace(estimate.missing(vecx(Shape2,revert=TRUE,lmdim=3,byrow=TRUE)))
plotTangentSpace(procSym(estimate.missing(vecx(Shape2,revert=TRUE,lmdim=3,byrow=TRUE)))$orpdata)
str(Shape2)
Shape2LMfix=fixLMtps(vecx(Shape2,revert=TRUE,lmdim=3,byrow=TRUE), comp = 10, weight = TRUE, weightfun = NULL)
Shape2[which(rowSums(is.na(Shape2))==ncol(Shape2)),]
Shape2=Shape2[rowSums(is.na(Shape2))!=ncol(Shape2), ]
Shape2LMfix=fixLMtps(vecx(Shape2,revert=TRUE,lmdim=3,byrow=TRUE), comp = 10, weight = TRUE, weightfun = NULL)
rownames(Otherinfo)=Otherinfo$catal
Otherinfo$catal
rownames(Otherinfo)
str(Otherinfo$catal)
as.chr(Otherinfo$catal)
as.string(Otherinfo$catal)
as.character(Otherinfo$catal)
duplicated(as.character(Otherinfo$catal))
as.character(Otherinfo$catal)[duplicated(as.character(Otherinfo$catal)),]
as.character(Otherinfo$catal)[duplicated(as.character(Otherinfo$catal))]
Shape2LMfix
?plotTangentSpace
dimnames(Shape2LMfix)[[3]]==rownames(Shape2)
dimnames(Shape2LMfix)[[3]]
dimnames(Shape2LMfix)$out[[3]]==rownames(Shape2)
dimnames(Shape2LMfix$out)[[3]]
dimnames(Shape2LMfix$out)[[3]]==rownames(Shape2)
all(dimnames(Shape2LMfix$out)[[3]]==rownames(Shape2))
str(Shape2LMfix)
?fixLMtps
Shape2LMfix$check
length(Shape2LMfix$check)
Shape2LMfix$checklist
Shape2LMfix$checklist[Shape2LMfix$check]
unlist(lapply(Shape2LMfix$checklist[Shape2LMfix$check], length))
number_of_missing_LMbysp=unlist(lapply(Shape2LMfix$checklist[Shape2LMfix$check], length))
number_of_missing_LMbysp_all=unlist(lapply(Shape2LMfix$checklist, length))
number_of_missing_LMbysp_all
rm(number_of_missing_LMbysp_all)
number_of_missing_LMbysp
dimnames(Shape2LMfix$out)
specimens_with_more_than10missingLM_idx=Shape2LMfix$check[which(number_of_missing_LMbysp>10)]
specimens_with_more_than10missingLM_idx
specimens_with_more_than10missingLM=dimnames(Shape2LMfix$out)[[3]][specimens_with_more_than10missingLM_idx]
specimens_with_more_than10missingLM
save.image(compress=TRUE)
library(devtools)
library(roxygen2)
devtools::document()
